#这里简单介绍下GIT中右上角的三个按钮Watch，Star，Fork的作用。
##【watch】
watch翻译过来可以称之为观察。
默认每一个用户都是处于Not watching的状态，当你选择Watching，表示你以后会关注这个项目的所有动态，以后只要这个项目发生变动，
如被别人提交了pull request、被别人发起了issue等等情况，
你都会在自己的个人通知中心，收到一条通知消息，如果你设置了个人邮箱，那么你的邮箱也可能收到相应的邮件
如果你不想接受这些通知，那么点击 Not Watching 即可。
##【star】
star 翻译过来应该是星星，但是这个翻译没任何具体意义，这里解释为`关注`或者`点赞`更合适，当你点击 star,表示你喜欢这个项目或者通俗点，
可以把他理解成朋友圈的点赞吧，表示对这个项目的支持。
不过相比朋友圈的点赞，github 里面会有一个列表，专门收集了你所有 start 过的项目，
点击 github 个人头像，可以看到 your star的条目，点击就可以查看你 star 过的所有项目了。
不过，在你的 star 列表很容易出现这样的问题。就是你可能 star 成百上千个项目怎么办。
这时，如果 github 可以提供一个分类功能该多好，就像微博网页版的收藏，你在收藏的时候可以设置 tag，
这样设置的好处是，以后再次查找项目时，可以根据归类查找，但是不知道 github 的产品经理是怎么想的，
github 本身没有这个功能，但是 github 从来也不缺有思想有执行力的程序员，
这不，前段时间就有人做了一个 Chrome 插件，这个插件可以对 github 中所有 star 的项目进行分类，
如下所示，注意看图片右侧，多了一个 Filter by tag 列表。
尽管这个插件已经很好了，但是还是有缺点，你只能 star完 项目了，去 star 列表后，才能对项目打 tag，这是很不方便的。
真心希望，未来 github 可以自己支持对 star 的 tag 处理。憧憬..
##【fork】
当选择 fork，相当于你自己有了一份原项目的拷贝，当然这个拷贝只是针对当时的项目文件，如果后续原项目文件发生改变，你必须通过其他的方式去同步。
一般来说，我们不需要使用 fork 这个功能，至少我一般不会用，除非有一些项目，可能存在 bug 或者可以继续优化的地方，你想帮助原项目作者去完善这个项目
，那么你可以 fork 一份项目下来，然后自己对这个项目进行修改完善，当你觉得项目没问题了，你就可以尝试发起 pull request给原项目作者了，
然后就静静等待他的 merge。
我看到很多人错误的在使用 fork。很多人把 fork 当成了收藏一样的功能，包括一开始使用 github 的我，每次看到一个好的项目就先 fork，
因为这样，就可以我的 repository(仓库)列表下查看 fork 的项目了。其实你完全可以使用 star 来达到这个目的。
##【使用建议】
1、对于一些可能会经常发生变化的会不定期更新的好项目多使用 watch.
watching 它，这里面都是一些关于 Android 技术的交流，如果有任何新问题，你都可以收到通知，你可以查看别人的回答，
你可以回答别人提出的问题，这是一个很好的学习成长方式。
其他值得watch的项目还有很多，比如 github 上很多的 Awesome 系列的项目,如 Awesome-MaterialDesign 等，你 watch 这些项目了，
只要项目新增一些好玩好用的东西，你就会收到通知。
我在知乎上看到有人问这样的问题，说 github 上有哪些值得 watch 的项目，其实有很多，我自己也整理了一些，但是没放到 github ，
有兴趣的同学可以联系，一起维护这样一个项目。
值得注意的是，如果 watch多了，你可能会被无休止的邮件通知烦死（邮件通知可设置），所以做好权衡，哈哈~
2、喜欢一个项目就 star 它吧~
3、修改开源项目就使用fork，这样你就可以在原项目的基础上，对项目进行修改提交，现在你是这个项目的主人啦~
##小细节
有些时候，你看到一个项目的 star 数有很多，你就想知道到底都有那些人 star 了这个项目，或者 fork 了这个项目，
但是环顾一圈，你却找不到一个入口，后来自己不经意的发现，只要`点击 star 傍边的数字`，就可以查看有哪些人star了这个项目。
是不是有点意思，现在你就可以去试试，watch、fork上面的数字都是可以点击的，道理一样。
